#!/bin/sh /etc/rc.common

START=51
STOP=51
USE_PROCD=1
EXTRA_COMMANDS='authorize connect'
EXTRA_HELP='
        authorize
           Authorize default identity in $HOME keychain to register prefixes.

        connect [save] FACE ROUTE ROUTE ...
            Create face and add routes.
            Optionally "save" to UCI (need "uci commit" manually).
'

CONFIGFILE=/etc/config/nfd
NFDCONFDIR=/var/etc/ndn
NFDCONFFILE=$NFDCONFDIR/nfd.conf
LUAHELPER='lua /usr/lib/lua/named-data/nfd-init.lua'

MGMTCERTID=/localhost/mgmt
MGMTCERTFILE=$NFDCONFDIR/mgmt.ndncert

OLDHOME=$HOME
export HOME=/var/lib/ndn/nfd

start_service() {
  mkdir -p $NFDCONFDIR
  >$NFDCONFFILE
  $LUAHELPER | sed -n '/CONFEDIT/ s|CONFEDIT|infoedit -f '$NFDCONFFILE'|p' | sh

  if ! ndnsec cert-dump -i $MGMTCERTID >$MGMTCERTFILE 2>/dev/null; then
    ndnsec delete $MGMTCERTID &>/dev/null
    ndnsec key-gen -te $MGMTCERTID >$MGMTCERTFILE
  fi
  if ! ndnsec cert-dump -i $MGMTCERTID >$MGMTCERTFILE 2>/dev/null; then
    ndnsec key-gen -te $MGMTCERTID >$MGMTCERTFILE.req
    ndnsec cert-gen -S 19700101000000 -E 20390802035434 -s $CACERTID \
                    -i local-mgmt-authorize $MGMTCERTFILE.req >$MGMTCERTFILE
    ndnsec cert-install -I $MGMTCERTFILE 2>/dev/null
    rm -f $MGMTCERTFILE.req
  fi

  procd_open_instance
  procd_set_param command /usr/bin/nfd -c $NFDCONFFILE
  procd_set_param env HOME=$HOME
  procd_set_param respawn 300 5 5
  procd_set_param file $CONFIGFILE
  procd_set_param stderr 1
  procd_close_instance
}

service_started() {
  local TIMEOUT=10
  while ! nfdc status &>/dev/null; do
    TIMEOUT=$((TIMEOUT-1))
    if [[ $TIMEOUT -eq 0 ]]; then
      exit 1
    fi
    sleep 1
  done

  $LUAHELPER | sed -n '/INITCMD/ s|INITCMD ||p' \
  | sh 2>&1 | logger -s -t nfd-init -p daemon.notice
}

authorize() {
  local IDENTITY=$(HOME=$OLDHOME ndnsec get-default 2>/dev/null)
  if [[ -z $IDENTITY ]]; then
    IDENTITY=/localhost/operator-$(date +%s)
    HOME=$OLDHOME ndnsec key-gen -te $IDENTITY >/dev/null
  fi
  # local REQ=/tmp/$(date +%s)
  # HOME=$OLDHOME ndnsec cert-dump $(HOME=$OLDHOME ndnsec get-default -c) >$REQ.ndncertreq
  # ndnsec cert-gen -s /localhost/root -i local-rib-authorize $REQ.ndncertreq >$REQ.ndncert
  # HOME=$OLDHOME ndnsec cert-install $REQ.ndncert 2>/dev/null
  # rm -f $REQ.ndncertreq $REQ.ndncert

  # echo 'Authorizing '$IDENTITY' in '$OLDHOME' for prefix registration.' \
  # | logger -s -t nfd-service -p user.notice
}

connect() {
  local SAVE=$1
  local SECTION=
  if [[ $SAVE == 'save' ]]; then
    shift
    SAVE=uci
    SECTION='nfd.'$(uci add nfd face)
  else
    SAVE=true
  fi

  $SAVE set $SECTION.remote=$1
  local FACEID=$(nfdc face create $1 persistency permanent \
                 | tr ' ' '\n' | sed -n '/id=/ s|id=||p')
  if [[ $FACEID == '' ]]; then
    exit 1
  fi
  shift
  while [[ $# -gt 0 ]]; do
    $SAVE add_list $SECTION.route=$1
    if ! nfdc route add $1 $FACEID cost 100 >/dev/null; then
      exit 1
    fi
    shift
  done
}
